<html>

<head>
	<meta charset="utf-8">
	<title>Characters | gopher-write</title>
	
	{{template "css"}}
</head>

<body>

{{template "js"}}

<script language="javascript">

window.onload = updateCharList;

function getForm(){
	return document.getElementById("form");
}

function addCharForm(){
	var form = getForm();
	
	form.innerHTML=form.innerHTML + "Name:<br><input id=\"form_name\" type=\"text\" ><br>";
	form.innerHTML=form.innerHTML + "Description:<br><input id=\"form_desc\" type=\"text\" ><br>";
	form.innerHTML=form.innerHTML + "Biological Age:<br><input id=\"form_age_bio\" type=\"number\" ><br>";
	form.innerHTML=form.innerHTML + "Chronological Age:<span class=\"form_make_button\" id=\"age_chrono_target\" onclick=\"addChronoAgeInput();\" >Add</span><br>";
	
	document.getElementById("form_new").style.display = 'none'
	document.getElementById("form_control").style.display = 'block'
}

function addChronoAgeInput(){
	var form = document.getElementById("form");
	
	//only do stuff if form exists
	if(form != null){
		var chronoAgeInput = document.createElement("input");
		chronoAgeInput.id = "form_age_chrono";
		chronoAgeInput.type = "number";
		
		//Target insert location
		var chronoAgeTarget = document.getElementById("age_chrono_target");
		
		chronoAgeTarget.parentNode.insertBefore(document.createElement("br"), chronoAgeTarget); //add line break
		chronoAgeTarget.parentNode.insertBefore(chronoAgeInput, chronoAgeTarget); //add actual input box
		
		chronoAgeTarget.innerHTML = "";
		chronoAgeTarget.classList.remove("form_make_button");
	}
}

function removeCharForm(){
	var form = getForm();
	
	form.innerHTML="";
	
	document.getElementById("form_new").style.display = 'block'
	document.getElementById("form_control").style.display = 'none'
}

function addName(){
	var form = getForm();
	var newName = document.createElement("div");
	newName.className = "form_alias_div";
	newName.innerHTML = "Alias:<br><input class=\"form_alias\" type=\"text\"><br>";
	
	form.appendChild(newName);
	
}

function removeLastName(){
	var form = getForm();
	var aliases = form.getElementsByClassName("form_alias_div");
	
	if(aliases.length > 0){
		form.removeChild(aliases[aliases.length - 1]);
	}
}

function processChar(){
	//Collect data for character
	
	//Name
	var name = MakeName(document.getElementById("form_name").value,false,null);
	//Description
	var description = document.getElementById("form_desc").value;
	//Age
	if(document.getElementById("form_age_chrono") != null){
		var age = MakeAge(parseInt(document.getElementById("form_age_bio").value),parseInt(document.getElementById("form_age_chrono").value));
	} else {
		var age = MakeAge(parseInt(document.getElementById("form_age_bio").value));
	}
	//Aliases
	var aliases = document.getElementsByClassName("form_alias");
	if (aliases.length == 0) { //if no aliases
		//set to null
		var aliasArray = null;
	} else { //otherwise
		//make array
		var aliasArray = []
		//assign values
		for(var i=0; i<aliases.length; i++){
			aliasArray[i] = MakeName(aliases[i].value, true, null); //make new name object and assign to array
		}	
	}
	
	//Make the character
	//Note: javascript does not have block scope, so aliasarray and age are in scope
	var character = MakeCharacter(name, description, age, aliasArray);
	
	var xhr = new XMLHttpRequest();
	var url = "/char/new";
	xhr.open("POST", url, true);
	xhr.setRequestHeader("Content-Type", "application/json");
	xhr.onreadystatechange = function () {
		//if server returns proper, update display
		if (this.readyState == 4 && this.status == 200){
			removeCharForm(); //remove form
			updateCharList(); //update char list
			showResponse("Character added.");
			setTimeout("hideResponse()",2000);
		} else if (this.readyState == 4 && this.status == 500) {
			showResponse("There was an error adding the character.");
			setTimeout("hideResponse()",2000);
		}
	}
	
	xhr.send(JSON.stringify(character));
}

var dat

function updateCharList(){
	var xhr = new XMLHttpRequest();
	var url = "/char/list";
	xhr.open("POST", url, true);
	xhr.onreadystatechange = function () {
		//if server returns JSON, update display
		if (this.readyState == 4 && this.status === 200){
			//get the char list
			var charList = document.getElementById("char_list");
			
			//convert json into object
			var data = JSON.parse(this.responseText).Data;
			
			if(data != null) {
				//blank the existing list
				charList.innerHTML = "";
				
				//add the chars to the page
				for (var i = 0; i < data.length; i++) {
					var charElem = document.createElement("div");
					charElem.className = "list_elem list_elem_color";
					charElem.setAttribute("data-char-uid",data[i].I); //set to char uid
					charElem.setAttribute("draggable","true");
					charElem.addEventListener("dblclick",linkListElement);
					
					var charElemName = document.createElement("span");
					charElem.setAttribute("draggable","true");
					charElemName.innerHTML = data[i].S; //set to char name
					
					charElem.appendChild(charElemName);
					
					charList.appendChild(charElem);
					
				}
			} else {
				showResponse("There are not any characters in this project.");
				setTimeout("hideResponse()",2000);
			}
			
		}
	}
	
	xhr.send();	
}

function linkListElement(e){
	var cuid = e.target.getAttribute("data-char-uid");
	var target = e.target;
	
	//Go to parent node if needed.
	while(!cuid){
		target = target.parentNode
		cuid = target.getAttribute("data-char-uid");
	}
	
	location.href = "/char/" + cuid;
}

</script>

{{template "header"}}

<h1 class="name">Characters</h1>

<div class="charnew" id="charnew">
	<div id="form_new">
		<button type="button" onclick="addCharForm()">New Character</button>
	</div>
	<form id="form" action="#">
		
	</form>
	<div id="form_control" style="display:none">
		<button onclick="addName()">Add Alias</button>
		<button onclick="removeLastName()">Remove Alias</button>
		<button onclick="processChar()">Submit</button>
	</div>
</div>

<div class="list" id="char_list">
</div>

</body>

</html>
