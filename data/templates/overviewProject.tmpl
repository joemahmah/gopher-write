<html>

<head>
	<meta charset="utf-8">
	<title>Story List | gopher-write</title>
	
	{{template "css"}}
</head>

<body>

{{template "js"}}

<script language="javascript">

//Set story list to update on load
window.onload = updateProjectList;

function updateProjectList(){
	var xhr = new XMLHttpRequest();
	var url = "/project/list";
	xhr.open("POST", url, true);
	xhr.onreadystatechange = function () {
		//if server returns JSON, update display
		if (this.readyState === 4 && this.status === 200){
			//get the project list
			var projectList = document.getElementById("project_list");
			
			//clear the project list
			projectList.innerHTML = "";
				
			//convert json into object
			var projectListJSON = JSON.parse(this.responseText);
			
			if(projectListJSON.Data != null) {
				var data = projectListJSON.Data;

				//add the projects to the page
				for (var i = 0; i < data.length; i++) {
					var projectElem = document.createElement("div");
					projectElem.classList.add("list_elem");
					projectElem.classList.add("list_elem_color");
					projectElem.setAttribute("data-path",data[i].S2);
					projectElem.addEventListener("dblclick", loadProject);
						
					var projectElemName = document.createElement("span");
					projectElemName.innerHTML = data[i].S1;
						
					projectElem.appendChild(projectElemName);
					
					//If project is active project
					if(data[i].B){
						projectElem.classList.add("list_elem_active");
						
						var activeText = document.createElement("span");
						activeText.classList.add("meta_small");
						activeText.innerHTML = "Active Project";
						
						projectElem.appendChild(activeText); //Add active text
					}
						
					projectList.appendChild(projectElem);
				}
			}
		} else if (this.readyState === 4 && this.status !== 200){
			alert(this.status);
		}
	}
	
	xhr.send();
}

function loadProject(e){
	var path = e.target.getAttribute("data-path");
	var target = e.target;
	
	//Get data from parent node if needed.
	while(!path){
		target = target.parentNode;
		path = target.getAttribute("data-path");
	}

	//Send request
	var xhr = new XMLHttpRequest();
	var url = "/project/load/" + path;
	xhr.open("POST", url, true);
	xhr.setRequestHeader("Content-Type", "text/plain");
	xhr.onreadystatechange = function () {
		if (this.readyState == 4 && this.status === 200){ //if loaded
			showResponse("Project loaded.");
			setTimeout("hideResponse()",2000);
			updateProjectList(); //update project list (active project)
		} else if (this.readyState == 4 && this.status !== 200) { //if not loaded
			showResponse("Unable to load project.");
			setTimeout("hideResponse()",5000);
		}
	}
	
	xhr.send();
}
var file;

function importProject(){
	var files = document.getElementById("project_import_input").files;
	
	//check if one file uploaded
	if(files.length !== 1){
		showResponse("Select a single file to import.");
		setTimeout("hideResponse()",5000);
		return;
	}
	
	//get the file
	file = files[0];
	
	//Make a file reader
	var fileReader = new FileReader();
	
	//Make the request
	var xhr = new XMLHttpRequest();
	var url = "/project/import"
	xhr.open("POST", url, true);
	xhr.setRequestHeader("Content-Type", "application/json");
	xhr.onreadystatechange = function () {
		if (this.readyState == 4 && this.status == 200){
			showResponse("Project created.");
			setTimeout("hideResponse()",2000);
			HideModal("project_import_modal"); //Hide the modal
			updateProjectList(); //Update the project list
			document.getElementById("project_new_input").value = ""; //Clear name
		} else if (this.readyState == 4 && this.status !== 200) {
			showResponse("Unable to create project.");
			setTimeout("hideResponse()",5000);
		}
	}
	
	//Set the filereader to send the file
	fileReader.onload = function(e){
		xhr.send(e.target.result);
	}
	
	//Read the file
	fileReader.readAsBinaryString(file)
}

function addProject(){
	var projectName = document.getElementById("project_new_input").value;
	var textobj = {Data: projectName};
	
	var xhr = new XMLHttpRequest();
	var url = "/project/new"
	xhr.open("POST", url, true);
	xhr.setRequestHeader("Content-Type", "application/json");
	xhr.onreadystatechange = function () {
		if (this.readyState == 4 && this.status == 200){
			showResponse("Project created.");
			setTimeout("hideResponse()",2000);
			HideModal("project_new_modal"); //Hide the modal
			updateProjectList(); //Update the project list
			document.getElementById("project_new_input").value = ""; //Clear name
		} else if (this.readyState == 4 && this.status !== 200) {
			showResponse("Unable to create project.");
			setTimeout("hideResponse()",5000);
		}
	}
	
	xhr.send(JSON.stringify(textobj));
}

function exportProject(){
	window.location = "/project/export";
	return;
}

</script>

{{template "header"}}

<h1 class="name">Projects</h1>

<div class="project_wrap">
	<div class="project_control">
		<span class="form_make_button meta_big" onclick='DisplayModal("project_new_modal");'>New Project</span>
		<span class="form_make_button meta_big" onclick='DisplayModal("project_import_modal");'>Import Project</span>
		<span class="form_make_button meta_big" onclick="exportProject();">Export Active Project</span>
	</div>
</div>

<div class="list" id="project_list">

</div>

<div class="ui_modal" id="project_new_modal">
<div class="ui_modal_content">
	<div class="ui_modal_form">
		<label>Project Name: </label>
		<input id="project_new_input" type="text">
	</div>
	<br>
	<div class="ui_modal_control">
			<span class="form_make_button form_make_button_big form_make_button_round form_make_button_right" onclick="addProject();">Create Project</span>
			<span class="form_make_button form_make_button_big form_make_button_round form_make_button_right" onclick='HideModal("project_new_modal");'>Close</span>
	</div>
</div>
</div>

<div class="ui_modal" id="project_import_modal">
<div class="ui_modal_content">
	<div class="ui_modal_form">
		<input id="project_import_input" type="file" multiple="false">
	</div>
	<br>
	<div class="ui_modal_control">
			<span class="form_make_button form_make_button_big form_make_button_round form_make_button_right" onclick="importProject();">Import Project</span>
			<span class="form_make_button form_make_button_big form_make_button_round form_make_button_right" onclick='HideModal("project_import_modal");'>Close</span>
	</div>
</div>
</div>

</body>

</html>
